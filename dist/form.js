// Generated by CoffeeScript 1.6.3
(function() {
  var Form,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Form = (function(_super) {
    var ERROR, IDLE, LOADING, SUCCESS;

    __extends(Form, _super);

    IDLE = "idle";

    LOADING = "loading";

    SUCCESS = "success";

    ERROR = "error";

    function Form(path) {
      if (path == null) {
        path = ".";
      }
      Form.__super__.constructor.call(this, "form", path);
    }

    Form.prototype.initialize = function() {
      Template.form.created = function() {
        return this.status = new Blaze.Var(IDLE);
      };
      Template.form.helpers({
        status: function() {
          return Template.instance().status.get();
        }
      });
      return Template.form.events({
        "submit": function(e, t) {
          var $submitButton, parentClass, _ref, _ref1;
          e.preventDefault();
          parentClass = (_ref = t.parentTemplate()) != null ? (_ref1 = _ref.view) != null ? _ref1.template : void 0 : void 0;
          $submitButton = t.$("[type=submit]");
          return $.ajax({
            type: t.data.method,
            url: t.data.action,
            data: Template.helpers.serializeJSON(t.$('form').serializeArray()),
            beforeSend: function(jqXHR, settings) {
              t.status.set(LOADING);
              $submitButton.attr("disabled", true);
              return parentClass != null ? typeof parentClass.before === "function" ? parentClass.before(jqXHR, settings) : void 0 : void 0;
            },
            error: function(jqXHR, textStatus, errorThrown) {
              t.status.set(ERROR);
              return parentClass != null ? typeof parentClass.error === "function" ? parentClass.error(jqXHR, textStatus, errorThrown) : void 0 : void 0;
            },
            success: function(data, textStatus, jqXHR) {
              t.status.set(SUCCESS);
              return parentClass != null ? typeof parentClass.success === "function" ? parentClass.success(data, textStatus, jqXHR) : void 0 : void 0;
            },
            complete: function(jqXHR, textStatus) {
              $submitButton.removeAttr("disabled");
              return parentClass != null ? typeof parentClass.complete === "function" ? parentClass.complete(jqXHR, textStatus) : void 0 : void 0;
            }
          });
        },
        "reset": function(e, t) {
          t.$("[type=submit]").removeAttr("disabled");
          return t.status.set(IDLE);
        }
      });
    };

    return Form;

  })(Component);

  window.Form = Form;

}).call(this);
